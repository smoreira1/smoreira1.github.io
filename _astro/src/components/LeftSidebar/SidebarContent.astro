---
import { getLanguageFromURL, removeSubpageSegment } from '../../util';
import UIString from '../UIString.astro';

export interface Props {
	type: 'learn' | 'api';
	defaultActiveTab: 'learn' | 'api';
	sidebarSections: Array<{
		text: string;
		type: 'learn' | 'api';
		children: Array<{ text: string; slug: string; isFallback?: boolean }>;
	}>;
	currentPageMatch: string;
}

const { type, defaultActiveTab, sidebarSections, currentPageMatch } = Astro.props as Props;
const lang = getLanguageFromURL(Astro.url.pathname);
---

{sidebarSections.length === 0 && (
	<li class={`nav-group ${type}`}>
		<div class="placeholder sm-hidden"><UIString key="leftSidebar.noTranslations" /></div>
		<a class="placeholder" href="/">
			<UIString key="leftSidebar.viewInEnglish" />
		</a>
	</li>
)}
{sidebarSections.map((section) => (
	<li class={`nav-group ${type} ${defaultActiveTab === type ? 'active' : ''}`}>
		<details open>
			<summary class="nav-group-title">
				<h2>
					{section.text}
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 1 16 16" width="16" height="16" aria-hidden="true">
						<path fill-rule="evenodd" d="M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z"></path>
					</svg>
				</h2>
			</summary>
			<ul>
				{section.children.map(({ slug, text, isFallback }) => (
					<li class="nav-link">
						<a
							href={`${Astro.site?.pathname}${lang}/${slug}/`}
							aria-current={`${currentPageMatch.endsWith(slug) ? 'page' : 'false'}`}
							data-current-parent={`${removeSubpageSegment(currentPageMatch).endsWith(removeSubpageSegment(slug)) ? 'true' : 'false'}`}
						><Fragment set:html={text} /> {isFallback && <sup class="fallback">EN</sup>}</a>
					</li>
				))}
			</ul>
		</details>
	</li>
))}

<style lang="scss">
	.nav-group {
		margin-top: 1.75rem;
	}
	.nav-group .placeholder {
		opacity: 0.6;
		text-align: center;
		display: block;
	}
	@media (max-width: 50em) {
		.sm-hidden {
			display: none !important;
		}
	}
	@media (min-width: 50em) {
		.nav-group {
			display: none;
		}
	}
	.nav-group.active {
		display: block;
	}
	.nav-group-title {
		font-size: 1rem;
		font-weight: 700;
		padding: 0.1rem 2rem;
		text-transform: uppercase;
		margin-bottom: 0.5rem;
	}

	.nav-link a {
		font-size: 1rem;
		margin: 1px;
		padding: 0.3rem 2rem;
		font: inherit;
		color: inherit;
		text-decoration: none;
		display: block;

		&:hover,
		&:focus {
			background-color: var(--theme-bg-hover);
		}

		&[aria-current='page'], &[data-current-parent='true'] {
			color: var(--theme-text-accent);
			background-color: var(--theme-bg-accent);
			font-weight: 600;
			/* Indicates the current page for forced colors users in older browsers */
			outline: 1px solid transparent;

			&:focus {
				outline: 2px solid;
			}
		}
		
		@media (forced-colors: active) {
			&[aria-current='page'], &[data-current-parent='true'] {
				border: 1px solid LinkText;
			}
		}
	}


	@media (min-width: 50em) {
		.nav-group-title {
			padding: 0.1rem 1rem;
		}
		.nav-link a {
			padding: 0.3rem 1rem;
		}
	}

	:global(:root.theme-dark) .nav-link a[aria-current='page'],
	:global(:root.theme-dark) .nav-link a[data-current-parent='true'] {
		color: hsla(var(--color-base-white), 100%, 1);
	}

	.fallback {
		font-size: .75em;
		line-height: 1;
		font-weight: bold;
		color: var(--theme-text-light);
	}

	details > summary {
        list-style: none;
	}

	details > summary::marker, 
	details > summary::-webkit-details-marker {
        display: none;
	}

	details[open] > summary svg {
		transform: rotate(90deg);
	}

	summary {
		cursor: pointer;
	}

	summary h2 {
		all: inherit;
		margin: 0;
		padding: 0;
	}

	svg {
		transform: rotate(0);
		transition: .15s transform ease;
		vertical-align: middle;
	}

	svg path {
		fill: currentColor;
	}
</style>
