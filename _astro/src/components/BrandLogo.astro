---
export interface Props {
	size?: `${number}rem` | `${number}px`;
	shape?: 'circle' | 'rounded';
	brand: 'buddy' | 'cloudflare' | 'deno' | 'github' | 'gitlab'
	| 'google-cloud' | 'google-firebase' | 'heroku' | 'layer-zero'
	| 'microsoft-azure' | 'netlify' | 'render' | 'surge' | 'vercel' | 'aws'
	| 'image' | 'lit' | 'mdx' | 'node' | 'partytown' | 'preact' | 'prefetch'
	| 'react' | 'sitemap' | 'solid-js' | 'svelte' | 'tailwind' | 'vue';
}

const logos: Record<Props['brand'], { file: string; padding: string; }> = {
	aws: { file: 'aws.svg', padding: '.1875em' },
	buddy: { file: 'buddy.svg', padding: '.1625em' },
	cloudflare: { file: 'cloudflare-pages.svg', padding: '.1875em' },
	deno: { file: 'deno.svg', padding: '0' },
	github: { file: 'github.svg', padding: '0.125em 0.125em 0.1375em' },
	gitlab: { file: 'gitlab.svg', padding: '0' },
	'google-cloud': { file: 'google-cloud.svg', padding: '.1875em' },
	'google-firebase': { file: 'firebase.svg', padding: '.1875em' },
	heroku: { file: 'heroku.svg', padding: '.25em' },
	'layer-zero': { file: 'layer0.svg', padding: '.1625em' },
	'microsoft-azure': { file: 'microsoft-azure.svg', padding: '.1625em .1625em .2125em' },
	netlify: { file: 'netlify.svg', padding: '.1625em' },
	render: { file: 'render.svg', padding: '.1875em' },
	surge: { file: 'surge.svg', padding: '.125em' },
	vercel: { file: 'vercel.svg', padding: '.3em .3em .35em' },
	image: { file: 'astro-image.svg', padding: '.1875em' },
	lit: { file: 'lit.svg', padding: '.1875em' },
	mdx: { file: 'mdx.svg', padding: '.1em' },
	node: { file: 'node.svg', padding: '.1875em' },
	partytown: { file: 'partytown.svg', padding: '.2em .2em .25em .25em' },
	preact: { file: 'preact.svg', padding: '.1875em' },
	prefetch: { file: 'prefetch.svg', padding: '.25em' },
	react: { file: 'react.svg', padding: '.2em' },
	sitemap: { file: 'sitemap.svg', padding: '.1875em .25em .25em' },
	'solid-js': { file: 'solid.svg', padding: '.1875em' },
	svelte: { file: 'svelte.svg', padding: '.1875em' },
	tailwind: { file: 'tailwind.svg', padding: '.1875em' },
	vue: { file: 'vue.svg', padding: '.3em .2em .2em' },
	flightcontrol: { file: 'flightcontrol.svg', padding: '0em 0em 0em' },
};

const { brand, size = '4rem', shape = 'circle' } = Astro.props as Props;
const { file, padding } = logos[brand] || {};

// Make a rough guess at the pixel size to use as width/height attributes
const [, value, unit] = /^(\d*(?:\.\d+)?)(\w+)$/.exec(size) || ['4', 'rem'];
const valueAsNumber = parseFloat(value);
const pixelSize = unit === 'px' ? valueAsNumber : valueAsNumber * 16;
---

{file && (<div class:list={['logo', shape]} style={`--logo-size: ${size}; --logo-padding: ${padding};`}>
	<img src={`/logos/${file}`} alt="" loading="lazy" decoding="async" width={pixelSize} height={pixelSize}>
</div>)}

<style>
	.logo {
		display: flex;
		place-content: center;
		font-size: var(--logo-size);
		width: 1em;
		height: 1em;
		background-color: var(--theme-code-bg);
		box-shadow: 0 0 var(--theme-glow-blur) var(--theme-glow-diffuse);
		/* Indicates the brand logo boundaries for forced colors users, transparent is changed to a solid color */
		outline: 1px solid transparent;
	}

	.circle {
		border-radius: 50%;
	}

	.rounded {
		border-radius: .125em;
	}

	.logo img {
		padding: var(--logo-padding);
		width: 100%;
		height: 100%;
	}
</style>
