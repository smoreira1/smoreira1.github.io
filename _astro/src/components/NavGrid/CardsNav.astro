---
import Badge from '../Badge.astro';
import type { Props as LogoProps } from '../BrandLogo.astro';
import Grid from './Grid.astro';
import Card from './Card.astro';

export interface Props {
	minimal?: boolean;
	links: {
		title: string;
		href: string;
		logo: LogoProps['brand'];
		/** Map of tag IDs to translated tag display text, e.g. `{ static: 'Statisch' }`. */
		tags?: Record<string, string>;
	}[];
	class?: string;
}

const { links, minimal = false, class: classes } = Astro.props as Props;

const currentPage = new URL(Astro.request.url).pathname;
---

<section class:list={['cards-nav', classes]}>
	<slot />
	<Grid {minimal}>
		{links.map(({ href, logo, title, tags }) => (
		<Card {minimal} {logo} {href} current={currentPage.includes(href)} class={Object.keys(tags || {}).join(' ')}>
				<Fragment slot="title" set:html={title} />
				<Fragment slot="details">
					{tags && <div class="tags">
						{Object.values(tags).map(tag => <Badge>{tag}</Badge>)}
					</div>}
				</Fragment>
			</Card>
		))}
	</Grid>
</section>

<style>
	.cards-nav {
		padding: 2rem 0;
		accent-color: var(--theme-accent-secondary);
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}
</style>
