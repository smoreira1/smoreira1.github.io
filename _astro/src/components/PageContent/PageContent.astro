---
import ArticleNavigationButton from './ArticleNavigationButton.astro';
import TableOfContents from '../RightSidebar/TableOfContents';
import { getNav, useTranslations } from "../../i18n/util";
import { getLanguageFromURL } from '../../util';

const { content, currentPage } = Astro.props;
// We wrap `@astrojs/` in a span to style it separately on integration pages.
const title = content.title.replace('@astrojs/', '<span class="scope">@astrojs/</span>');
const headings = content.astro?.headings;
const lang = getLanguageFromURL(Astro.url.pathname);
const links = (await getNav(Astro)).filter((x) => !('header' in x) && x.slug) as { text: string; slug: string; }[];
const index = links.findIndex((x) => currentPage.includes(x.slug));
const makeLinkItem = ({ text, slug }) => ({ text, link: `/${lang}/${slug}/` });
let next, previous;
if (index > 0) previous = makeLinkItem(links[index - 1]);
if (index !== -1 && index < links.length - 1) next = makeLinkItem(links[index + 1]);
const t = useTranslations(Astro);
---

{
	// For best cross-browser support of sticky or fixed elements, they must not be nested
	// inside elements that hide any overflow axis. The article content hides `overflow-x`,
	// so we must place the mobile TOC here.
	headings && (
		<nav class="mobile-toc">
			<TableOfContents
				client:media="(max-width: 72em)"
				headings={headings}
				labels={{ onThisPage: t('rightSidebar.onThisPage'), overview: t('rightSidebar.overview') }}
				isMobile={true}
			/>
		</nav>
	)
}

<article id="article" class="content">
	<section class="main-section">
		<h1 class="content-title" id="overview" set:html={title} />
		<slot />
	</section>
	{(previous || next) && (
		<aside class="next-previous-nav">
			{previous && <ArticleNavigationButton rel="prev" item={previous} />}
			{next && <ArticleNavigationButton rel="next" item={next} />}
		</aside>
	)}
</article>

<style>
	.content-title :global(.scope) {
		font-weight: 300;
		color: var(--theme-text-lighter);
	}
	.content {
		padding-top: calc(var(--theme-navbar-height) + var(--theme-mobile-toc-height) + var(--doc-padding-block));
		padding-bottom: var(--doc-padding-block);
		padding-inline: var(--min-spacing-inline);
		width: 100%;
		height: 100%;
		max-width: 80ch;
		margin-inline: auto;
		display: flex;
		flex-direction: column;
		overflow-x: hidden;
	}
	.content > section {
		margin-bottom: 4rem;
	}
	.next-previous-nav {
		display: flex;
		flex-wrap: wrap;
		width: auto;
		gap: 1rem;
		margin-bottom: 1.5rem;
	}

	.mobile-toc {
		display: block;
		position: fixed;
		left: 0;
		top: calc(var(--theme-navbar-height));
		right: 0;
		z-index: 2;
	}
	@media (min-width: 50em) {
		.mobile-toc {
			left: var(--theme-left-sidebar-width);
			margin-top: 0;
		}
	}
	@media (min-width: 72em) {
		.content {
			padding-top: calc(var(--theme-navbar-height) + var(--doc-padding-block));
		}
		.mobile-toc {
			display: none;
		}
	}
</style>
